version: '3'
services:
  #||---------------------------------||
  #|| CONTAINER example               ||
  #||---------------------------------||
  # lucasratiaray-portfolio:
  #   container_name: {name}
  #   image: {image}
  #   expose:
  #     - "{port}"
  #   volumes:
  #     - {volume1}
  #     - {volume2}
  #     - {volume3...}
  #   networks:
  #     - {network}

  #||-----------------------------------||
  #|| EXAMPLE FOR Block 1               ||
  #||-----------------------------------||
  php-apache:
    container_name: {name}
    build: site #if dockerfile exist
    expose:
      - "8000" #default
    volumes:
      - ./www/site1:/var/www/html/
      - ./server/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./server/apache2.conf:/etc/apache2/apache2.conf
      - ./server/php.ini:/usr/local/etc/php/php.ini
      - ./server/ports.conf:/etc/apache2/ports.conf
    networks:
      - backend #example of network

  #||-----------------------------------||
  #|| CONTAINER FOR Block 2             ||
  #||-----------------------------------||
  php-apache:
    container_name: {name}
    build: site #if dockerfile exist
    expose:
      - "8000" #default
    volumes:
      - ./www/site2:/var/www/html/
      - ./server/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./server/apache2.conf:/etc/apache2/apache2.conf
      - ./server/php.ini:/usr/local/etc/php/php.ini
      - ./server/ports.conf:/etc/apache2/ports.conf
    networks:
      - backend #example of network

  #||-----------------------------------||
  #|| CONTAINER FOR NGINX REVERSE PROXY ||
  #||-----------------------------------||
  nginx:
    container_name: nginx_reverse_proxy
    restart: unless-stopped
    image: nginx
    ports:
        - "80:80"
        - "443:443"
    depends_on:
    # - {container-name}
    # - {container-name}
    # ex:  - php-apache
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./certbot/conf:/etc/letsencrypt
        - ./certbot/www:/var/www/certbot
    networks:
      - backend

  #||-----------------------------------||
  #|| CONTAINER FOR CERTBOT             ||
  #||-----------------------------------||
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email {email} -d {mydomain1.com} -d {mydomain2.com} --agree-tos
    networks:
      - backend

networks:
  backend:
